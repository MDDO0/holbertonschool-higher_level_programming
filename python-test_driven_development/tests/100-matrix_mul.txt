"""
This module tests the matrix_mul function.

>>> from 100-matrix_mul import matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2]], [[3], [4]])
[[11]]

>>> matrix_mul([[2.5, 3.5]], [[4], [2]])
[[17.0]]

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul("not a matrix", [[1]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1]], "not a matrix")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, "four"]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2]], [[1, 2], [3, "four"]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([], [[1]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty
"""
